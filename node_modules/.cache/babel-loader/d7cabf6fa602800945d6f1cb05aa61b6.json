{"ast":null,"code":"\"use strict\";\n\nimport _regeneratorRuntime from \"C:/Users/LIPAM/Aya/react-write-read-smart-contracts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"C:/Users/LIPAM/Aya/react-write-read-smart-contracts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/LIPAM/Aya/react-write-read-smart-contracts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/LIPAM/Aya/react-write-read-smart-contracts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/LIPAM/Aya/react-write-read-smart-contracts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\n;\n;\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\nexport var ForkEvent = /*#__PURE__*/function (_Description) {\n  _inherits(ForkEvent, _Description);\n  var _super = _createSuper(ForkEvent);\n  function ForkEvent() {\n    _classCallCheck(this, ForkEvent);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ForkEvent, null, [{\n    key: \"isForkEvent\",\n    value: function isForkEvent(value) {\n      return !!(value && value._isForkEvent);\n    }\n  }]);\n  return ForkEvent;\n}(Description);\nexport var BlockForkEvent = /*#__PURE__*/function (_ForkEvent) {\n  _inherits(BlockForkEvent, _ForkEvent);\n  var _super2 = _createSuper(BlockForkEvent);\n  function BlockForkEvent(blockHash, expiry) {\n    _classCallCheck(this, BlockForkEvent);\n    if (!isHexString(blockHash, 32)) {\n      logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n    }\n    return _super2.call(this, {\n      _isForkEvent: true,\n      _isBlockForkEvent: true,\n      expiry: expiry || 0,\n      blockHash: blockHash\n    });\n  }\n  return _createClass(BlockForkEvent);\n}(ForkEvent);\nexport var TransactionForkEvent = /*#__PURE__*/function (_ForkEvent2) {\n  _inherits(TransactionForkEvent, _ForkEvent2);\n  var _super3 = _createSuper(TransactionForkEvent);\n  function TransactionForkEvent(hash, expiry) {\n    _classCallCheck(this, TransactionForkEvent);\n    if (!isHexString(hash, 32)) {\n      logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n    }\n    return _super3.call(this, {\n      _isForkEvent: true,\n      _isTransactionForkEvent: true,\n      expiry: expiry || 0,\n      hash: hash\n    });\n  }\n  return _createClass(TransactionForkEvent);\n}(ForkEvent);\nexport var TransactionOrderForkEvent = /*#__PURE__*/function (_ForkEvent3) {\n  _inherits(TransactionOrderForkEvent, _ForkEvent3);\n  var _super4 = _createSuper(TransactionOrderForkEvent);\n  function TransactionOrderForkEvent(beforeHash, afterHash, expiry) {\n    _classCallCheck(this, TransactionOrderForkEvent);\n    if (!isHexString(beforeHash, 32)) {\n      logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n    }\n    if (!isHexString(afterHash, 32)) {\n      logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n    }\n    return _super4.call(this, {\n      _isForkEvent: true,\n      _isTransactionOrderForkEvent: true,\n      expiry: expiry || 0,\n      beforeHash: beforeHash,\n      afterHash: afterHash\n    });\n  }\n  return _createClass(TransactionOrderForkEvent);\n}(ForkEvent);\n///////////////////////////////\n// Exported Abstracts\nexport var Provider = /*#__PURE__*/function () {\n  function Provider() {\n    _classCallCheck(this, Provider);\n    logger.checkAbstract(this instanceof Provider ? this.constructor : void 0, Provider);\n    defineReadOnly(this, \"_isProvider\", true);\n  }\n  _createClass(Provider, [{\n    key: \"getFeeData\",\n    value: function getFeeData() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$resolvePropert, block, gasPrice, maxFeePerGas, maxPriorityFeePerGas;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return resolveProperties({\n                block: this.getBlock(\"latest\"),\n                gasPrice: this.getGasPrice().catch(function (error) {\n                  // @TODO: Why is this now failing on Calaveras?\n                  //console.log(error);\n                  return null;\n                })\n              });\n            case 2:\n              _yield$resolvePropert = _context.sent;\n              block = _yield$resolvePropert.block;\n              gasPrice = _yield$resolvePropert.gasPrice;\n              maxFeePerGas = null, maxPriorityFeePerGas = null;\n              if (block && block.baseFeePerGas) {\n                // We may want to compute this more accurately in the future,\n                // using the formula \"check if the base fee is correct\".\n                // See: https://eips.ethereum.org/EIPS/eip-1559\n                maxPriorityFeePerGas = BigNumber.from(\"2500000000\");\n                maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n              }\n              return _context.abrupt(\"return\", {\n                maxFeePerGas: maxFeePerGas,\n                maxPriorityFeePerGas: maxPriorityFeePerGas,\n                gasPrice: gasPrice\n              });\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n    }\n    // Alias for \"on\"\n  }, {\n    key: \"addListener\",\n    value: function addListener(eventName, listener) {\n      return this.on(eventName, listener);\n    }\n    // Alias for \"off\"\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(eventName, listener) {\n      return this.off(eventName, listener);\n    }\n  }], [{\n    key: \"isProvider\",\n    value: function isProvider(value) {\n      return !!(value && value._isProvider);\n    }\n  }]);\n  return Provider;\n}();","map":{"version":3,"names":["_regeneratorRuntime","_classCallCheck","_createClass","_inherits","_createSuper","BigNumber","isHexString","Description","defineReadOnly","resolveProperties","Logger","version","logger","ForkEvent","_Description","_super","apply","arguments","key","value","isForkEvent","_isForkEvent","BlockForkEvent","_ForkEvent","_super2","blockHash","expiry","throwArgumentError","call","_isBlockForkEvent","TransactionForkEvent","_ForkEvent2","_super3","hash","_isTransactionForkEvent","TransactionOrderForkEvent","_ForkEvent3","_super4","beforeHash","afterHash","_isTransactionOrderForkEvent","Provider","checkAbstract","constructor","getFeeData","block","getBlock","gasPrice","getGasPrice","catch","error","_yield$resolvePropert","_context","sent","maxFeePerGas","maxPriorityFeePerGas","baseFeePerGas","from","mul","add","abrupt","stop","_callee","addListener","eventName","listener","on","removeListener","off","isProvider","_isProvider"],"sources":["../src.ts/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}